
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.PackageScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  priceUSD: 'priceUSD',
  startingAtUSD: 'startingAtUSD',
  priceType: 'priceType',
  audience: 'audience',
  isPopular: 'isPopular',
  active: 'active',
  sortOrder: 'sortOrder',
  sessionsPerPack: 'sessionsPerPack',
  durationMin: 'durationMin',
  image: 'image',
  features: 'features',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  hashedPassword: 'hashedPassword',
  role: 'role',
  timezone: 'timezone',
  isDisabled: 'isDisabled',
  rateHourlyCents: 'rateHourlyCents',
  ratePerSessionCents: 'ratePerSessionCents',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AuditScalarFieldEnum = {
  id: 'id',
  actorId: 'actorId',
  action: 'action',
  entity: 'entity',
  entityId: 'entityId',
  meta: 'meta',
  createdAt: 'createdAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  title: 'title',
  startAt: 'startAt',
  endAt: 'endAt',
  meetingUrl: 'meetingUrl',
  notes: 'notes',
  userId: 'userId',
  teacherId: 'teacherId',
  status: 'status',
  feedbackScore: 'feedbackScore',
  reminder24hSentAt: 'reminder24hSentAt',
  reminder1hSentAt: 'reminder1hSentAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationCodeScalarFieldEnum = {
  id: 'id',
  email: 'email',
  codeHash: 'codeHash',
  expiresAt: 'expiresAt',
  attempts: 'attempts',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PasswordResetCodeScalarFieldEnum = {
  id: 'id',
  email: 'email',
  codeHash: 'codeHash',
  expiresAt: 'expiresAt',
  attempts: 'attempts',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  amountCents: 'amountCents',
  currency: 'currency',
  status: 'status',
  psp: 'psp',
  pspOrderId: 'pspOrderId',
  customerEmail: 'customerEmail',
  customerPhone: 'customerPhone',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Audience = exports.$Enums.Audience = {
  INDIVIDUAL: 'INDIVIDUAL',
  CORPORATE: 'CORPORATE'
};

exports.PriceType = exports.$Enums.PriceType = {
  PER_SESSION: 'PER_SESSION',
  BUNDLE: 'BUNDLE',
  CUSTOM: 'CUSTOM'
};

exports.SessionStatus = exports.$Enums.SessionStatus = {
  scheduled: 'scheduled',
  completed: 'completed',
  canceled: 'canceled'
};

exports.Prisma.ModelName = {
  Package: 'Package',
  User: 'User',
  Audit: 'Audit',
  Session: 'Session',
  VerificationCode: 'VerificationCode',
  PasswordResetCode: 'PasswordResetCode',
  Order: 'Order'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/BelalHelmy/Desktop/speexify-backend:/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/BelalHelmy/Desktop/speexify-backend:/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// prisma/schema.prisma\n// Learn more: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_URL\") // useful for Neon\n}\n\n/**\n * ────────────────────────────────────────────────────────────────────────────\n * Enums\n * ────────────────────────────────────────────────────────────────────────────\n */\n\nenum Audience {\n  INDIVIDUAL\n  CORPORATE\n}\n\nenum PriceType {\n  PER_SESSION\n  BUNDLE\n  CUSTOM\n}\n\n/**\n * For session lifecycle + dashboard actions\n */\nenum SessionStatus {\n  scheduled // default; can be rescheduled freely\n  completed // set after the session ends / attendance confirmed\n  canceled // user/teacher cancels\n}\n\n/**\n * ────────────────────────────────────────────────────────────────────────────\n * Models\n * ────────────────────────────────────────────────────────────────────────────\n */\n\nmodel Package {\n  id          Int     @id @default(autoincrement())\n  title       String\n  description String?\n\n  // Pricing (nullable to allow custom quotes)\n  priceUSD      Int?\n  startingAtUSD Int?\n\n  // Meta\n  priceType PriceType @default(BUNDLE)\n  audience  Audience  @default(INDIVIDUAL)\n  isPopular Boolean   @default(false)\n  active    Boolean   @default(true)\n  sortOrder Int       @default(0)\n\n  // Format details\n  sessionsPerPack Int?\n  durationMin     Int?\n  image           String?\n\n  // Newline-separated bullet points\n  features String?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel User {\n  id             Int     @id @default(autoincrement())\n  email          String  @unique\n  name           String?\n  hashedPassword String\n  role           String  @default(\"learner\") // learner | teacher | admin\n  timezone       String?\n  isDisabled     Boolean @default(false)\n\n  // Teacher rates (optional)\n  rateHourlyCents     Int?\n  ratePerSessionCents Int?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  sessions         Session[]\n  teachingSessions Session[] @relation(\"SessionTeacher\")\n  audits           Audit[]   @relation(\"Audit_actor\")\n\n  @@index([role])\n}\n\nmodel Audit {\n  id        Int      @id @default(autoincrement())\n  actorId   Int\n  action    String // e.g., user_disable, role_change, impersonate_start\n  entity    String // e.g., \"User\" / \"Session\" / \"Package\"\n  entityId  Int?\n  meta      Json?\n  createdAt DateTime @default(now())\n\n  actor User @relation(\"Audit_actor\", fields: [actorId], references: [id])\n\n  @@index([entity, entityId])\n}\n\nmodel Session {\n  id         Int       @id @default(autoincrement())\n  title      String\n  startAt    DateTime\n  endAt      DateTime?\n  meetingUrl String?\n  notes      String?\n\n  // Learner\n  userId Int\n  user   User @relation(fields: [userId], references: [id])\n\n  // Assigned teacher (optional)\n  teacherId Int?\n  teacher   User? @relation(\"SessionTeacher\", fields: [teacherId], references: [id])\n\n  // Status & feedback for dashboard features\n  status        SessionStatus @default(scheduled)\n  feedbackScore Int? // 1..5 optional rating\n\n  // Reminder bookkeeping (for cron/queues)\n  reminder24hSentAt DateTime?\n  reminder1hSentAt  DateTime?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Useful indexes for queries shown on the dashboard\n  @@index([userId, startAt])\n  @@index([teacherId, startAt])\n}\n\nmodel VerificationCode {\n  id        String   @id @default(cuid())\n  email     String   @unique\n  codeHash  String\n  expiresAt DateTime\n  attempts  Int      @default(0)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel PasswordResetCode {\n  id        String   @id @default(cuid())\n  email     String   @unique\n  codeHash  String\n  expiresAt DateTime\n  attempts  Int      @default(0)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Order {\n  id            String   @id\n  amountCents   Int\n  currency      String   @default(\"EGP\")\n  status        String   @default(\"pending\") // pending | paid | failed | canceled\n  psp           String   @default(\"paymob\")\n  pspOrderId    Int?\n  customerEmail String?\n  customerPhone String?\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n}\n",
  "inlineSchemaHash": "f6cb6b6b600e4de05982a753ad90f470b0f82a0b3de92083de6d3a66acd73188",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Package\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priceUSD\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"startingAtUSD\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"priceType\",\"kind\":\"enum\",\"type\":\"PriceType\"},{\"name\":\"audience\",\"kind\":\"enum\",\"type\":\"Audience\"},{\"name\":\"isPopular\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sortOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sessionsPerPack\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"durationMin\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"features\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hashedPassword\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isDisabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"rateHourlyCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ratePerSessionCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"teachingSessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionTeacher\"},{\"name\":\"audits\",\"kind\":\"object\",\"type\":\"Audit\",\"relationName\":\"Audit_actor\"}],\"dbName\":null},\"Audit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"actorId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"meta\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"actor\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Audit_actor\"}],\"dbName\":null},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"meetingUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"},{\"name\":\"teacherId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"teacher\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionTeacher\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"SessionStatus\"},{\"name\":\"feedbackScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reminder24hSentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reminder1hSentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"VerificationCode\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"codeHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"attempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PasswordResetCode\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"codeHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"attempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amountCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"psp\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pspOrderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"customerEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

